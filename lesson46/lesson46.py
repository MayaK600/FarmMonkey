# Lesson 46
def nextValue(num):
    if num%2==0:
        return num // 2
    else:
        return ( 3 * num ) + 1

def sequenceMaker(start, table):
    if start in table:
        return table[start] 
    else: 
        sequence = [start] # initialize sequence 
        size =1 
        # while the number is not one and has not been in out sequqnce before 
        while sequence [-1] !=1 and sequence [-1] not in table:
            #generate next number
            newValue = nextValue(sequence[-1])
            if newValue in table:
                size = size + table[newValue]
                break
            else: 
                sequence.append(newValue)
                size+=1

        for i in range(len(sequence)):
            table[sequence[i]]=size-i
        
        return size 

memory ={1:1 , 2:2}
#key --> starting value of the sequence 
# value --> length of the sequence for the starting value 
start = 13
test = sequenceMaker(start, memory)
print (f"{start} has {test} many values")
for key,value in memory.items():
    print(f"{key} has {value} terms")
print()

memory={1:1,2:2} #reset memory
for start in range (3,100000):
    currentLength = sequenceMaker(start, memory)

answer=0 
longestLength=0
for key in range(1,100000):
    if memory[key]>longestLength:
        answer = key
        longestLength=memory[key]

print(f"Longest sequence has a length of {longestLength} generated by {answer}")


